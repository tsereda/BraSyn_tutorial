apiVersion: v1
kind: Pod
metadata:
  name: brats-pod
spec:
  nodeSelector:
    topology.kubernetes.io/zone: sdsu-rci
    topology.kubernetes.io/region: us-west
  containers:
    - name: brats-processing
      image: gitlab-registry.nrp-nautilus.io/prp/jupyter-stack/prp
      env:
        - name: REPO_PATH
          value: /app/BraSyn_tutorial
        - name: SYNAPSE_AUTHTOKEN
          valueFrom:
            secretKeyRef:
              name: synapse-credentials
              key: authtoken
      command:
        - "bash"
        - "-c"
      args:
        - |
          sudo apt-get update && sudo apt-get install -y p7zip-full

          #pip install synapseclient
          #synapse config
          #synapse get -r syn51514105 

          cp /data/ASNR-MICCAI-BraTS2023-GLI-Challenge-TrainingData.zip .
          cp /data/ASNR-MICCAI-BraTS2023-GLI-Challenge-ValidationData.zip .
          7z x ASNR-MICCAI-BraTS2023-GLI-Challenge-TrainingData.zip -y -mmt=$(nproc)
          7z x ASNR-MICCAI-BraTS2023-GLI-Challenge-ValidationData -y -mmt=$(nproc)

          git clone -b calc-affine-orientation https://github.com/tsereda/BraSyn_tutorial.git ${REPO_PATH}
          cd ${REPO_PATH}

          mamba create -n brasyn python=3.10 -y
          mamba activate brasyn
          pip install -r project/requirements.txt

          python drop_modality.py
          python project/generate_missing_modality.py
      
          sleep infinity
      volumeMounts:
        - name: git-repo
          mountPath: /app
        - name: brats-data-volume
          mountPath: /data
        - name: dshm
          mountPath: /dev/shm
      resources:
        limits:
          memory: 24Gi
          cpu: "12"
          nvidia.com/gpu: "1"
        requests:
          memory: 20Gi
          cpu: "10"
          nvidia.com/gpu: "1"
  volumes:
    - name: git-repo
      emptyDir: {}
    - name: brats-data-volume
      persistentVolumeClaim:
        claimName: brats2025-1
    - name: dshm
      emptyDir:
        medium: Memory
        sizeLimit: 8Gi
  restartPolicy: Never